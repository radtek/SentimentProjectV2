package utils;

import java.io.IOException;

import preProcessing.NewsArticleWithStemmedVersion;
import preProcessing.NewsArticlesWithPosTaggedWords;
import preProcessing.NewsArticlesWithStemmedVersion;
import newsAPI.JsonHandler;

public class Stemmer extends norwegianStemmer {
	
	
	
	public Stemmer(){
		
	}
	
	public static String stemText(String text){
		Stemmer stemmer = new Stemmer();
		String newText = "";
		String[] oldTextArray = text.split(" ");
		for(int i=0; i<oldTextArray.length; i++){
			stemmer.setCurrent(oldTextArray[i]);
			stemmer.stem();
			newText+= " " + stemmer.getCurrent();
		}
		return newText;
	}
	
	public NewsArticlesWithStemmedVersion stemAllArticles(NewsArticlesWithPosTaggedWords nawptw){
		NewsArticlesWithStemmedVersion nawsv = new NewsArticlesWithStemmedVersion();
		for(int i=0; i<nawptw.getNawpti().size(); i++){
			NewsArticleWithStemmedVersion newArticle = new NewsArticleWithStemmedVersion();
			newArticle = (NewsArticleWithStemmedVersion) nawptw.getNawpti().get(i);
			newArticle.setStemmedTitle(stemText(nawptw.getNawpti().get(i).getTitle()));
			newArticle.setStemmedLeadText(stemText(nawptw.getNawpti().get(i).getlead_text()));
			newArticle.setStemmedTitle(stemText(nawptw.getNawpti().get(i).getTitle()));
		}
		
		
		return nawsv;
	}
	
	public static void main(String[] args) throws IOException{
		JsonHandler handler = new JsonHandler("/ArticleSteps/3_POStaggedArticles/StemmingTestArticles.txt", "pos");
		System.out.println(stemText(handler.getPosTaggedArticles().nawpti.get(0).text));
	}
}
