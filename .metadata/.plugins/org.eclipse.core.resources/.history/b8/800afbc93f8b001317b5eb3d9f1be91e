package preProcessing;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;



public class TextFileHandler {
	
	
	//HANDLES ALL RESOURCES THAT ARE SAVED AS TEXT FILES e.g WORDLISTS
	
	public TextFileHandler(){
		
	}
	
	public String getTextFileAsString(String path, Charset encoding) throws IOException 
	{
		byte[] encoded = Files.readAllBytes(Paths.get(path));
		return encoding.decode(ByteBuffer.wrap(encoded)).toString();
	}
	
	public String getPath() {
	    String path = String.format("%s/%s", System.getProperty("user.dir"), this.getClass().getPackage().getName().replace(".", "/"));
	    return path.split("/")[0]+"/ArticleResources/";
	}
	
	
	//GET ANALYTIC CLUES FROM FILE AS STRINGLIST
	public String[] getAnalyticalClues() throws IOException{
			String[] analyticArticleCluesList = null;
			TextFileHandler tfh =  new TextFileHandler();
			String analyticArticleClues = tfh.getTextFileAsString(tfh.getPath()+"/WordListsOfImportance/AnalyticalArticleClues.txt", StandardCharsets.UTF_8);
			analyticArticleCluesList = analyticArticleClues.split(",");
			return analyticArticleCluesList;
	}
	//GET RECCOMENDATION CLUES FROM FILE AS STRINGLIST
	public String[] getReccomendationClues() throws IOException{
			String[] analyticArticleCluesList = null;
			TextFileHandler tfh =  new TextFileHandler();
			String analyticArticleClues = tfh.getTextFileAsString(tfh.getPath()+"/WordListsOfImportance/AnalyticalArticleClues.txt", StandardCharsets.UTF_8);
			analyticArticleCluesList = analyticArticleClues.split(",");
			return analyticArticleCluesList;
	}
	//GET LIST OF VALENCE SHIFTERS FROM FILE AS STRINGLIST
	public String[] getValenceShifter() throws IOException{
			String[] analyticArticleCluesList = null;
			TextFileHandler tfh =  new TextFileHandler();
			String analyticArticleClues = tfh.getTextFileAsString(tfh.getPath()+"/WordListsOfImportance/AnalyticalArticleClues.txt", StandardCharsets.UTF_8);
			analyticArticleCluesList = analyticArticleClues.split(",");
			return analyticArticleCluesList;
	}
	//GET ANALYTIC CLUES FROM FILE AS STRING LIST
	public String[] getPositiveTitleClues() throws IOException{
			String[] analyticArticleCluesList = null;
			TextFileHandler tfh =  new TextFileHandler();
			String analyticArticleClues = tfh.getTextFileAsString(tfh.getPath()+"/WordListsOfImportance/AnalyticalArticleClues.txt", StandardCharsets.UTF_8);
			analyticArticleCluesList = analyticArticleClues.split(",");
			return analyticArticleCluesList;
	}
	//GET ANALYTIC CLUES FROM FILE AS STRING LIST
	public String[] getPositiveTitleClues() throws IOException{
			String[] analyticArticleCluesList = null;
			TextFileHandler tfh =  new TextFileHandler();
			String analyticArticleClues = tfh.getTextFileAsString(tfh.getPath()+"/WordListsOfImportance/AnalyticalArticleClues.txt", StandardCharsets.UTF_8);
			analyticArticleCluesList = analyticArticleClues.split(",");
			return analyticArticleCluesList;
	}

}
